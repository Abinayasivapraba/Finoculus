package com.abi.letzchatbe.controller;

import java.util.Date;
import java.util.List;
import java.util.concurrent.ThreadLocalRandom;

import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.abi.letzchatbe.dao.GroupDAO;
import com.abi.letzchatbe.model.Group;

@RestController
public class GroupRestController {
	@Autowired
	Group group;
	@Autowired
	GroupDAO groupDAO;
	@Autowired
	HttpSession session;
	
	private static final Logger log= LoggerFactory.getLogger(GroupRestController.class);
	 
		@GetMapping("/GroupList")
		public ResponseEntity <List<Group>> listOfGroup()
		{
			List<Group> groupList=groupDAO.list();
			return new ResponseEntity <List<Group>>(groupList,HttpStatus.OK);
			
		}
		

		@PostMapping("/AddGroup")
		public ResponseEntity<Group> saveGroup(@RequestBody Group newGroup)
		{
			log.debug("Starting of the  method Create Group");
			group = groupDAO.getGroupById(newGroup.getGroupid());
			String loggedInUserId = (String) session.getAttribute("userLoggedIn");
			if(loggedInUserId==null)
			{
				log.debug("Checking whether the User Is Logged In Or Not");
				newGroup.setErrorcode("400");
				newGroup.setErrormessage("Login of User required..Please Login with your Id..");
				return new ResponseEntity<Group>(newGroup, HttpStatus.OK);
			}
			if(group==null)
			{
				log.debug("Starting of group is null method of save Group");
				long d = System.currentTimeMillis();
				Date today = new Date(d);
				newGroup.setGroupid(ThreadLocalRandom.current().nextInt(100,1000000+1));
				newGroup.setCreatorid(loggedInUserId);
				newGroup.setDate(today);
				newGroup.setGroupname(group.getGroupname());
				
				groupDAO.save(newGroup);
				newGroup.setErrorcode("200");
				newGroup.setErrormessage("Group  Posted Successfully ");
				return new ResponseEntity<Group>(newGroup, HttpStatus.OK);
			}
			else
			{
				log.debug("Starting of else method of saveGroup");
				newGroup.setErrorcode("404");
				newGroup.setErrormessage("Group Does Not Posted Successfully Please Try Again");
				return new ResponseEntity<Group>(newGroup, HttpStatus.OK);
			}
		}
		
}
